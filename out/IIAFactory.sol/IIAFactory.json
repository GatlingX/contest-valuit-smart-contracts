{"abi":[{"type":"function","name":"deployIA","inputs":[{"name":"_token","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployedByFactory","inputs":[{"name":"_ia","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"event","name":"ImplementationAuthorityDeployed","inputs":[{"name":"_ia","type":"address","indexed":true,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"deployIA(address)":"52f1431b","deployedByFactory(address)":"de87aeeb"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_ia\",\"type\":\"address\"}],\"name\":\"ImplementationAuthorityDeployed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"deployIA\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ia\",\"type\":\"address\"}],\"name\":\"deployedByFactory\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deployIA(address)\":{\"details\":\"deploy a new TREXImplementationAuthority smart contract\",\"params\":{\"_token\":\"the token for which the new IA will be used  function called by the `changeImplementationAuthority` function  can be called only by the reference TREXImplementationAuthority contract  the new contract deployed will contain all the versions from reference IA  the new contract will be set on the same version as the reference IA  ownership of the new IA is transferred to the Owner of the token  emits a `ImplementationAuthorityDeployed` event  returns the address of the IA contract deployed\"}},\"deployedByFactory(address)\":{\"details\":\"function used to know if an IA contract was deployed by the factory or not\",\"params\":{\"_ia\":\"the address of TREXImplementationAuthority contract\"}}},\"version\":1},\"userdoc\":{\"events\":{\"ImplementationAuthorityDeployed(address)\":{\"notice\":\"event emitted when a new TREXImplementationAuthority is deployed\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/proxy/authority/IIAFactory.sol\":\"IIAFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@onchain-id/=node_modules/@onchain-id/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@tw3/=node_modules/@tw3/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"contracts/proxy/authority/IIAFactory.sol\":{\"keccak256\":\"0xb4478ae8140e2f3318b6cbe7195d83bd22aed1035b0e7c2a8240f69e325fac87\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://274339c909d6e48c5866910d71ae3119912ad6ebdb6b551378c14a9fd4ef53ce\",\"dweb:/ipfs/QmbyiJEaaPsbqHrnMg39ZNKtVY9Fc42GVosJTkdbDkjazx\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.17+commit.8df45f5f"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_ia","type":"address","indexed":true}],"type":"event","name":"ImplementationAuthorityDeployed","anonymous":false},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"deployIA","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"_ia","type":"address"}],"stateMutability":"view","type":"function","name":"deployedByFactory","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"deployIA(address)":{"details":"deploy a new TREXImplementationAuthority smart contract","params":{"_token":"the token for which the new IA will be used  function called by the `changeImplementationAuthority` function  can be called only by the reference TREXImplementationAuthority contract  the new contract deployed will contain all the versions from reference IA  the new contract will be set on the same version as the reference IA  ownership of the new IA is transferred to the Owner of the token  emits a `ImplementationAuthorityDeployed` event  returns the address of the IA contract deployed"}},"deployedByFactory(address)":{"details":"function used to know if an IA contract was deployed by the factory or not","params":{"_ia":"the address of TREXImplementationAuthority contract"}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@ensdomains/=node_modules/@ensdomains/","@onchain-id/=node_modules/@onchain-id/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@tw3/=node_modules/@tw3/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/proxy/authority/IIAFactory.sol":"IIAFactory"},"evmVersion":"london","libraries":{},"viaIR":true},"sources":{"contracts/proxy/authority/IIAFactory.sol":{"keccak256":"0xb4478ae8140e2f3318b6cbe7195d83bd22aed1035b0e7c2a8240f69e325fac87","urls":["bzz-raw://274339c909d6e48c5866910d71ae3119912ad6ebdb6b551378c14a9fd4ef53ce","dweb:/ipfs/QmbyiJEaaPsbqHrnMg39ZNKtVY9Fc42GVosJTkdbDkjazx"],"license":"GPL-3.0"}},"version":1},"id":65}